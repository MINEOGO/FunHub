-- Place this script in a LocalScript inside StarterPlayerScripts

local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")
local rootPart = character:WaitForChild("HumanoidRootPart")

local flying = false
local flightSpeed = 10  -- Default flight speed
local bodyVelocity = Instance.new("BodyVelocity")
local bodyGyro = Instance.new("BodyGyro")
bodyVelocity.MaxForce = Vector3.new(4000, 4000, 4000)
bodyGyro.MaxTorque = Vector3.new(4000, 4000, 4000)

-- Create a ScreenGui to hold buttons and controls
local gui = Instance.new("ScreenGui", player:WaitForChild("PlayerGui"))
gui.Name = "FlyingControlGui"

-- Create Main Frame (Draggable)
local controlFrame = Instance.new("Frame", gui)
controlFrame.Size = UDim2.new(0, 200, 0, 150)
controlFrame.Position = UDim2.new(0.5, -100, 0.7, 0)
controlFrame.BackgroundTransparency = 0.2
controlFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
controlFrame.Active = true
controlFrame.Draggable = true

-- Create Title Bar for dragging
local titleBar = Instance.new("TextLabel", controlFrame)
titleBar.Size = UDim2.new(1, 0, 0.3, 0)
titleBar.Text = "Made by Mineogo"
titleBar.TextColor3 = Color3.new(1, 1, 1)
titleBar.BackgroundTransparency = 0.3
titleBar.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
titleBar.Font = Enum.Font.SourceSans
titleBar.TextSize = 16

-- Create Fly Button
local flyButton = Instance.new("TextButton", controlFrame)
flyButton.Size = UDim2.new(0.8, 0, 0.2, 0)
flyButton.Position = UDim2.new(0.1, 0, 0.3, 0)
flyButton.Text = "Fly"
flyButton.BackgroundColor3 = Color3.fromRGB(0, 255, 0)

-- Create Speed Up Button
local speedUpButton = Instance.new("TextButton", controlFrame)
speedUpButton.Size = UDim2.new(0.4, 0, 0.2, 0)
speedUpButton.Position = UDim2.new(0, 0, 0.55, 0)
speedUpButton.Text = "+"
speedUpButton.BackgroundColor3 = Color3.fromRGB(0, 255, 255)

-- Create Speed Down Button
local speedDownButton = Instance.new("TextButton", controlFrame)
speedDownButton.Size = UDim2.new(0.4, 0, 0.2, 0)
speedDownButton.Position = UDim2.new(0.6, 0, 0.55, 0)
speedDownButton.Text = "-"
speedDownButton.BackgroundColor3 = Color3.fromRGB(255, 0, 0)

-- Create Speed Display
local speedDisplay = Instance.new("TextLabel", controlFrame)
speedDisplay.Size = UDim2.new(1, 0, 0.2, 0)
speedDisplay.Position = UDim2.new(0, 0, 0.85, 0)
speedDisplay.Text = "Speed: " .. flightSpeed
speedDisplay.TextColor3 = Color3.new(1, 1, 1)
speedDisplay.BackgroundTransparency = 1
speedDisplay.Font = Enum.Font.SourceSans
speedDisplay.TextSize = 16

-- Start flying
local function startFlying()
    if not flying then
        flying = true
        bodyVelocity.Parent = rootPart
        bodyGyro.Parent = rootPart
    end
end

-- Stop flying
local function stopFlying()
    if flying then
        flying = false
        bodyVelocity.Parent = nil
        bodyGyro.Parent = nil
    end
end

-- Button Actions
flyButton.MouseButton1Click:Connect(function()
    if flying then
        stopFlying()
        flyButton.Text = "Fly"
    else
        startFlying()
        flyButton.Text = "Stop Fly"
    end
end)

speedUpButton.MouseButton1Click:Connect(function()
    flightSpeed = flightSpeed + 5
    speedDisplay.Text = "Speed: " .. flightSpeed
end)

speedDownButton.MouseButton1Click:Connect(function()
    if flightSpeed > 5 then
        flightSpeed = flightSpeed - 5
        speedDisplay.Text = "Speed: " .. flightSpeed
    end
end)

-- Update flight controls with WASD and mouse look
local function updateFlight()
    if flying then
        local moveDirection = Vector3.new()
        if game:GetService("UserInputService"):IsKeyDown(Enum.KeyCode.W) then
            moveDirection = moveDirection + rootPart.CFrame.LookVector
        end
        if game:GetService("UserInputService"):IsKeyDown(Enum.KeyCode.S) then
            moveDirection = moveDirection - rootPart.CFrame.LookVector
        end
        if game:GetService("UserInputService"):IsKeyDown(Enum.KeyCode.A) then
            moveDirection = moveDirection - rootPart.CFrame.RightVector
        end
        if game:GetService("UserInputService"):IsKeyDown(Enum.KeyCode.D) then
            moveDirection = moveDirection + rootPart.CFrame.RightVector
        end

        -- Adjusting for up/down movement
        if game:GetService("UserInputService"):IsKeyDown(Enum.KeyCode.Space) then
            moveDirection = moveDirection + Vector3.new(0, flightSpeed, 0)
        elseif game:GetService("UserInputService"):IsKeyDown(Enum.KeyCode.LeftControl) then
            moveDirection = moveDirection - Vector3.new(0, flightSpeed, 0)
        end

        -- Set velocity and ensure correct flight movement
        bodyVelocity.Velocity = moveDirection.Unit * flightSpeed
        bodyGyro.CFrame = rootPart.CFrame
    end
end

-- Update flight controls every frame
game:GetService("RunService").Heartbeat:Connect(function()
    updateFlight()
end)

-- Reset when character respawns
player.CharacterAdded:Connect(function(newCharacter)
    character = newCharacter
    rootPart = character:WaitForChild("HumanoidRootPart")
    humanoid = character:WaitForChild("Humanoid")
    stopFlying()
end)
